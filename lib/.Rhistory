geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave("us_rank.png",width = 20, height = 20)
ggsave("us_rank.png",width = 10, height = 10)
ggsave("us_rank.png",width = 5, height = 5)
us_new%>%
mutate(country = fct_reorder(Country.x,desc(value))) %>%
ggplot(aes(x=country, y = value , fill =Country.x)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("US: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave("us_rank.png",width = 5, height = 5)
ggsave("us_rank.png",width = 10, height = 5)
ggsave("us_rank.png",width = 12, height = 5)
ggsave("us_rank.png",width = 9, height = 5)
russia_new%>%
mutate(country = fct_reorder(Country.x,desc(value))) %>%
ggplot(aes(x=country, y = value , fill =Country.x)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("Russia: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave("russia_rank.png",width = 9, height = 5)
China_new%>%
mutate(country = fct_reorder(Country.y,desc(value))) %>%
ggplot(aes(x=country, y = value , fill =Country.y)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("China: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave("china_rank.png",width = 9, height = 5)
UK_new%>%
mutate(country = fct_reorder(Country.x,desc(value))) %>%
ggplot(aes(x=country, y = value , fill =Country.x)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("UK: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave("uk_rank.png",width = 9, height = 5)
france_new%>%
mutate(country = fct_reorder(Country.y,desc(value))) %>%
ggplot(aes(x=country, y = value , fill =Country.y)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave("france_rank.png",width = 9, height = 5)
read_csv("us_word.csv")
read_csv("us_word.csv")
us_word <-read_csv("us_word.csv")
us_word
round(us_word$frequency,2)
us_words%>%
round(frequency,2)
us_word%>%
round(frequency,2)
us_word%>%
round(us_word$frequency,2)
round(us_word$frequency,2)
mutate(Frequency = round(us_word$frequency,2))
us_word%>%
mutate(Frequency = round(us_word$frequency,2))
us_word%>%
mutate(Frequency = round(us_word$frequency,2))%>%
select(word,Frequency)
us_word%>%
mutate(words = fct_reorder(word,desc(Frequency)) %>%
ggplot(aes(x=words, y = Frequency , fill =Frequency)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word %>%
mutate(words = fct_reorder(word,desc(Frequency)) %>%
ggplot(aes(x=words, y = Frequency , fill =Frequency)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word %>%
mutate(words = factor(word,desc(Frequency)) %>%
ggplot(aes(x=words, y = Frequency , fill =Frequency)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggplot(us_word,x=word,y=Frequency)
us_word%>%
mutate(country = fct_reorder(word,desc(Frequency))) %>%
ggplot(aes(x=country, y = Frequency , fill =country)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
scale_fill_manual(values=c("aquamarine", "darkorchid", "deepskyblue2", "lemonchiffon2", "orange", "peachpuff3", "tomato","coral","grey","yellow"))+
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(country = fct_reorder(word,desc(Frequency))) %>%
ggplot(aes(x=country, y = Frequency , fill =country)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(Frequency = round(us_word$frequency,2))%>%
select(word,Frequency)
us_word%>%
mutate(country = fct_reorder(word,desc(Frequency))) %>%
ggplot(aes(x=country, y = Frequency , fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=country, y = Frequency , fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word, y = Frequency , fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word,fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word,y = Frequency, fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word,y=Frequency, fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word,y=Frequency, fill =word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word,y=Frequency)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(Frequency = round(us_word$frequency,2))%>%
select(word,Frequency)
us_word<- us_word%>%
mutate(Frequency = round(us_word$frequency,2))%>%
select(word,Frequency)
us_word%>%
ggplot(aes(x=word,y=Frequency)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(word = fct_reorder(word,desc(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(word = fct_reorder(word,desc(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(word = fct_reorder(word,desc(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
us_word%>%
mutate(word = fct_reorder(word,aesc(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
us_word%>%
mutate(word = fct_reorder(word,ascend(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
us_word%>%
mutate(word = fct_reorder(word,asce(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
us_word%>%
mutate(word = fct_reorder(word,asc(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
us_word%>%
mutate(word = fct_reorder(word,(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()
theme(legend.position="none") +
ggtitle("France: Most Similiarities Countries Rank in 2018 UN Leaders General Debates")
ggsave('us_word.png', )
ggsave('us_word.png', width = 7, height =10)
us_word%>%
mutate(word = fct_reorder(word,(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("US Trump High Frequency Words in 2018 UN General Debate")
us_word%>%
mutate(word = fct_reorder(word,(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("US Trump Top 30 High Frequency Words in 2018 UN General Debate")
ggsave('us_word.png', width = 7, height =10)
china_word<-read_csv("china_word.csv")
china_word%>% separate(china_word,c("country","frequency"))
china_word<-read_csv("china_word.csv",skip=1)
china_word<-read_csv("china_word.csv",skip=1)
china_word
china_word<-read_csv("china_word.csv")
china_word
china_word<-read_csv("china_word.csv")
china_word
china_word<- china_word%>%
mutate(Frequency = round(us_word$frequency,2))%>%
select(word,Frequency)
china_word<- china_word%>%
mutate(Frequency = round(china_word$frequency,2))%>%
select(word,Frequency)
china_word%>%
mutate(Frequency = round(china_word$frequency,2))%>%
select(word,Frequency)
china_word%>%
mutate(Frequency = round(china_word$frequency,2))
round(china_word$frequency,2)
china_word<- china_word%>%
mutate(Frequency = round(china_word$frequency,2))%>%
select(word,Frequency)
china_word<-read_csv("china_word.csv")
china_word
china_word%>%
mutate(word = fct_reorder(word,(Frequency))) %>%
ggplot(aes(x=word,y=Frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("China Top 30 High Frequency Words in 2018 UN General Debate")
china_word%>%
mutate(word = fct_reorder(word,(frequency))) %>%
ggplot(aes(x=word,y=frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("China Top 30 High Frequency Words in 2018 UN General Debate")
china_word%>%
mutate(word = factor(word,(frequency))) %>%
ggplot(aes(x=word,y=frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("China Top 30 High Frequency Words in 2018 UN General Debate")
china_word%>%
mutate(word = factor(word,(frequency))) %>%
ggplot(aes(x=word,y=frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("China Top 30 High Frequency Words in 2018 UN General Debate")
china_word%>%
mutate(word = fct_reorder(word,(frequency))) %>%
ggplot(aes(x=word,y=frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("China Top 30 High Frequency Words in 2018 UN General Debate")
china_word%>%
mutate(word = fct_reorder(word,frequency)) %>%
ggplot(aes(x=word,y=frequency,fill = word)) +
geom_bar(stat="identity") +
coord_flip()+
theme(legend.position="none") +
ggtitle("China Top 30 High Frequency Words in 2018 UN General Debate")
China_new
library(gmodels)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y,type ="t")
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y,type ="t")
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y,type ="t")
datatable(data1)
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y)
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y)
datatable(data1)
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y)
data <- read_csv('2018UN2_arrange_13.csv')
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(tokenizers)
library(tidyverse)
library(hrbrthemes)
library(circlize)
library(kableExtra)
options(knitr.table.format = "html")
library(viridis)
library(igraph)
library(ggraph)
library(colormap)
library(plotly)
library(ggplot2)
data <- read_csv('2018UN2_arrange_13.csv')
data
ggplot(data, aes(x=Country.x, y=Country.y, fill=value)) +
geom_tile(color="white", width=.9, height=1.1) +
theme_minimal() +
scale_fill_gradient2(midpoint=0, low="white", high="blue", limits=c(0, 1)) +
labs(title="Which Countries' Leaders Have More Common Words?", x="", y="", caption="Source: 2018 UN leaders General Debates ", fill="Frequent Words Similarities") +
scale_x_discrete(position = "top") +
theme(legend.position="top",plot.title = element_text(hjust = 0.5))
ggsave('Heatmap.png',width = 20, height = 10,limitsize = FALSE)
data1 <- read_csv('2018UN2_arrange_14.csv')
data1
# data in 5 countries
us <- data1%>%
filter(Country.x == "us" |Country.y == "us")
filter(Country.x == "russia" |Country.y == "russia")
# data in 5 countries
us <- data1%>%
filter(Country.x == "us" |Country.y == "us")%>%
filter(Country.x == "russia" |Country.y == "russia")%>%
filter(Country.x == "China" |Country.y == "China")%>%
filter(Country.x == "France" |Country.y == "France")%>%
filter(Country.x == "United Kingdom" |Country.y == "United Kingdom")
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us")%>%
filter(Country.x == "russia" |Country.y == "russia")%>%
filter(Country.x == "China" |Country.y == "China")%>%
filter(Country.x == "France" |Country.y == "France")%>%
filter(Country.x == "United Kingdom" |Country.y == "United Kingdom")
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us")%>%
filter(Country.x == "russia" |Country.y == "russia")%>%
filter(Country.x == "China" |Country.y == "China")%>%
filter(Country.x == "France" |Country.y == "France")%>%
filter(Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5
write.csv('big5.csv')
write.csv(big_5,'big5.csv')
deduped.data <- unique(big_5[ , 1:2 ])
deduped.data <- unique(big_5[ , 1:2 ])
deduped.data
deduped.data <- unique(big_5[ , 1 ])
deduped.data
data <- read_csv('2018UN2_arrange_13.csv')
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(tokenizers)
library(tidyverse)
library(hrbrthemes)
library(circlize)
library(kableExtra)
options(knitr.table.format = "html")
library(viridis)
library(igraph)
library(ggraph)
library(colormap)
library(plotly)
library(ggplot2)
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(tokenizers)
library(tidyverse)
library(hrbrthemes)
library(circlize)
library(kableExtra)
options(knitr.table.format = "html")
library(viridis)
library(igraph)
library(ggraph)
library(colormap)
library(plotly)
library(ggplot2)
data <- read_csv('2018UN2_arrange_13.csv')
data
ggplot(data, aes(x=Country.x, y=Country.y, fill=value)) +
geom_tile(color="white", width=.9, height=1.1) +
theme_minimal() +
scale_fill_gradient2(midpoint=0, low="white", high="blue", limits=c(0, 1)) +
labs(title="Which Countries' Leaders Have More Common Words?", x="", y="", caption="Source: 2018 UN leaders General Debates ", fill="Frequent Words Similarities") +
scale_x_discrete(position = "top") +
theme(legend.position="top",plot.title = element_text(hjust = 0.5))
ggsave('Heatmap.png',width = 20, height = 10,limitsize = FALSE)
node <- head(data,19)
node <- head(data,19)
node
deduped.data <- unique( node[ , 1 ] )
deduped.data <- unique( node[ , 1 ] )
deduped.data
node<- unique( node[ , 1 ] )
node
node<- unique( node[ , 1 ] )
write.csv(node,"node.csv")
node <- unique( big_5[ , 1 ] )
node
write.csv(node,"node.csv")
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(round(value)*100)
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(Value ==round(value)*100)
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(Value,round(value)*100)
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(round(value)*100)
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(round(value*100))
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(Value,round(value*100))
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(round(value*100))
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(Value = round(value*100))
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(Value = round(value*1000))
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5%>%
mutate(Value = round(value*1000))%>%
select(Country.x,Country.y,Value)
write.csv(big_5,'big5.csv')
write.csv(big_5,'big5_value.csv')
# data in 5 countries
big_5 <- data1%>%
filter(Country.x == "us" |Country.y == "us"|Country.x == "russia" |Country.y == "russia"|Country.x == "China" |Country.y == "China"|Country.x == "France" |Country.y == "France"|Country.x == "United Kingdom" |Country.y == "United Kingdom")
big_5<-big_5%>%
mutate(Value = round(value*1000))%>%
select(Country.x,Country.y,Value)
write.csv(big_5,'big5.csv')
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y)
library(gmodels)
library(DT)
data1 <- CrossTable(China_new$Country.x, China_new$Country.y)
write.csv(data1,'data1.csv')
node <- read.csv('node1.csv')
links<- read.csv('big_5.csv')
node <- read.csv('node1.csv')
links<- read.csv('big5.csv')
node
nodes <- read.csv('node1.csv')
links<- read.csv('big5.csv')
library("igraph")
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
library("igraph")
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
